// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.LevelGameWindow = (function(_super) {
    __extends(LevelGameWindow, _super);

    function LevelGameWindow(width, height, assetQueue) {
      this.assetQueue = assetQueue;
      LevelGameWindow.__super__.constructor.call(this, width, height);
    }

    LevelGameWindow.prototype.initialize = function() {
      LevelGameWindow.__super__.initialize.apply(this, arguments);
      this.setupCollisionLayer();
      this.setupDoorLayer();
      return this.setupForeground();
    };

    LevelGameWindow.prototype.setupCollisionLayer = function() {
      var shape;
      this.collisionLayer = new createjs.Container();
      this.collisionLayer.alpha = 0;
      shape = new createjs.Shape();
      shape.graphics.beginFill("#000");
      shape.graphics.moveTo(1010.0, 190.0);
      shape.graphics.lineTo(1000.0, 190.0);
      shape.graphics.lineTo(1000.0, 100.0);
      shape.graphics.lineTo(1010.0, 100.0);
      shape.graphics.lineTo(1010.0, 190.0);
      this.collisionLayer.addChild(shape);
      shape = new createjs.Shape();
      shape.graphics.beginFill("#000");
      shape.graphics.moveTo(1000.0, 200.0);
      shape.graphics.lineTo(1070.0, 200.0);
      shape.graphics.lineTo(1070.0, 190.0);
      shape.graphics.lineTo(1000.0, 190.0);
      shape.graphics.lineTo(1000.0, 200.0);
      this.collisionLayer.addChild(shape);
      shape = new createjs.Shape();
      shape.graphics.beginFill("#000");
      shape.graphics.moveTo(1000.0, 90.0);
      shape.graphics.lineTo(1000.0, 100.0);
      shape.graphics.lineTo(1110.0, 100.0);
      shape.graphics.lineTo(1110.0, 90.0);
      shape.graphics.lineTo(1000.0, 90.0);
      this.collisionLayer.addChild(shape);
      shape = new createjs.Shape();
      shape.graphics.beginFill("#000");
      shape.graphics.moveTo(1610.0, 500.0);
      shape.graphics.lineTo(1500.0, 500.0);
      shape.graphics.lineTo(1500.0, 490.0);
      shape.graphics.lineTo(1610.0, 490.0);
      shape.graphics.lineTo(1610.0, 500.0);
      this.collisionLayer.addChild(shape);
      shape = new createjs.Shape();
      shape.graphics.beginFill("#000");
      shape.graphics.moveTo(400.0, 90.0);
      shape.graphics.lineTo(400.0, 100.0);
      shape.graphics.lineTo(510.0, 100.0);
      shape.graphics.lineTo(510.0, 90.0);
      shape.graphics.lineTo(400.0, 90.0);
      this.collisionLayer.addChild(shape);
      shape = new createjs.Shape();
      shape.graphics.beginFill("#000");
      shape.graphics.moveTo(2090.0, 0.0);
      shape.graphics.lineTo(2090.0, 0.0);
      shape.graphics.lineTo(10.0, 0.0);
      shape.graphics.lineTo(10.0, 0.0);
      shape.graphics.lineTo(0.0, 0.0);
      shape.graphics.lineTo(0.0, 0.0);
      shape.graphics.lineTo(0.0, 10.0);
      shape.graphics.lineTo(0.0, 290.0);
      shape.graphics.lineTo(0.0, 300.0);
      shape.graphics.lineTo(0.0, 310.0);
      shape.graphics.lineTo(0.0, 590.0);
      shape.graphics.lineTo(0.0, 600.0);
      shape.graphics.lineTo(10.0, 600.0);
      shape.graphics.lineTo(2100.0, 600.0);
      shape.graphics.lineTo(2100.0, 590.0);
      shape.graphics.lineTo(310.0, 590.0);
      shape.graphics.lineTo(310.0, 500.0);
      shape.graphics.lineTo(510.0, 500.0);
      shape.graphics.lineTo(510.0, 490.0);
      shape.graphics.lineTo(300.0, 490.0);
      shape.graphics.lineTo(300.0, 500.0);
      shape.graphics.lineTo(300.0, 590.0);
      shape.graphics.lineTo(10.0, 590.0);
      shape.graphics.lineTo(10.0, 310.0);
      shape.graphics.lineTo(100.0, 310.0);
      shape.graphics.lineTo(100.0, 500.0);
      shape.graphics.lineTo(110.0, 500.0);
      shape.graphics.lineTo(210.0, 500.0);
      shape.graphics.lineTo(210.0, 490.0);
      shape.graphics.lineTo(210.0, 400.0);
      shape.graphics.lineTo(210.0, 390.0);
      shape.graphics.lineTo(110.0, 390.0);
      shape.graphics.lineTo(110.0, 310.0);
      shape.graphics.lineTo(690.0, 310.0);
      shape.graphics.lineTo(690.0, 500.0);
      shape.graphics.lineTo(700.0, 500.0);
      shape.graphics.lineTo(710.0, 500.0);
      shape.graphics.lineTo(710.0, 310.0);
      shape.graphics.lineTo(1000.0, 310.0);
      shape.graphics.lineTo(1000.0, 500.0);
      shape.graphics.lineTo(1010.0, 500.0);
      shape.graphics.lineTo(1110.0, 500.0);
      shape.graphics.lineTo(1110.0, 490.0);
      shape.graphics.lineTo(1110.0, 400.0);
      shape.graphics.lineTo(1110.0, 390.0);
      shape.graphics.lineTo(1010.0, 390.0);
      shape.graphics.lineTo(1010.0, 400.0);
      shape.graphics.lineTo(1100.0, 400.0);
      shape.graphics.lineTo(1100.0, 490.0);
      shape.graphics.lineTo(1010.0, 490.0);
      shape.graphics.lineTo(1010.0, 310.0);
      shape.graphics.lineTo(1390.0, 310.0);
      shape.graphics.lineTo(1390.0, 490.0);
      shape.graphics.lineTo(1300.0, 490.0);
      shape.graphics.lineTo(1300.0, 500.0);
      shape.graphics.lineTo(1390.0, 500.0);
      shape.graphics.lineTo(1400.0, 500.0);
      shape.graphics.lineTo(1410.0, 500.0);
      shape.graphics.lineTo(1410.0, 310.0);
      shape.graphics.lineTo(1800.0, 310.0);
      shape.graphics.lineTo(1800.0, 400.0);
      shape.graphics.lineTo(1810.0, 400.0);
      shape.graphics.lineTo(1810.0, 310.0);
      shape.graphics.lineTo(2090.0, 310.0);
      shape.graphics.lineTo(2090.0, 490.0);
      shape.graphics.lineTo(2010.0, 490.0);
      shape.graphics.lineTo(2010.0, 390.0);
      shape.graphics.lineTo(2000.0, 390.0);
      shape.graphics.lineTo(1910.0, 390.0);
      shape.graphics.lineTo(1900.0, 390.0);
      shape.graphics.lineTo(1900.0, 490.0);
      shape.graphics.lineTo(1800.0, 490.0);
      shape.graphics.lineTo(1800.0, 500.0);
      shape.graphics.lineTo(1900.0, 500.0);
      shape.graphics.lineTo(1910.0, 500.0);
      shape.graphics.lineTo(1910.0, 400.0);
      shape.graphics.lineTo(2000.0, 400.0);
      shape.graphics.lineTo(2000.0, 490.0);
      shape.graphics.lineTo(2000.0, 500.0);
      shape.graphics.lineTo(2090.0, 500.0);
      shape.graphics.lineTo(2100.0, 500.0);
      shape.graphics.lineTo(2100.0, 310.0);
      shape.graphics.lineTo(2100.0, 300.0);
      shape.graphics.lineTo(2100.0, 290.0);
      shape.graphics.lineTo(910.0, 290.0);
      shape.graphics.lineTo(910.0, 190.0);
      shape.graphics.lineTo(900.0, 190.0);
      shape.graphics.lineTo(900.0, 290.0);
      shape.graphics.lineTo(410.0, 290.0);
      shape.graphics.lineTo(410.0, 200.0);
      shape.graphics.lineTo(510.0, 200.0);
      shape.graphics.lineTo(510.0, 190.0);
      shape.graphics.lineTo(300.0, 190.0);
      shape.graphics.lineTo(300.0, 200.0);
      shape.graphics.lineTo(300.0, 290.0);
      shape.graphics.lineTo(10.0, 290.0);
      shape.graphics.lineTo(10.0, 10.0);
      shape.graphics.lineTo(200.0, 10.0);
      shape.graphics.lineTo(200.0, 90.0);
      shape.graphics.lineTo(100.0, 90.0);
      shape.graphics.lineTo(100.0, 100.0);
      shape.graphics.lineTo(200.0, 100.0);
      shape.graphics.lineTo(200.0, 190.0);
      shape.graphics.lineTo(100.0, 190.0);
      shape.graphics.lineTo(100.0, 200.0);
      shape.graphics.lineTo(200.0, 200.0);
      shape.graphics.lineTo(210.0, 200.0);
      shape.graphics.lineTo(210.0, 10.0);
      shape.graphics.lineTo(690.0, 10.0);
      shape.graphics.lineTo(690.0, 200.0);
      shape.graphics.lineTo(700.0, 200.0);
      shape.graphics.lineTo(700.0, 200.0);
      shape.graphics.lineTo(710.0, 200.0);
      shape.graphics.lineTo(710.0, 10.0);
      shape.graphics.lineTo(1390.0, 10.0);
      shape.graphics.lineTo(1390.0, 200.0);
      shape.graphics.lineTo(1400.0, 200.0);
      shape.graphics.lineTo(1410.0, 200.0);
      shape.graphics.lineTo(1410.0, 10.0);
      shape.graphics.lineTo(1500.0, 10.0);
      shape.graphics.lineTo(1500.0, 200.0);
      shape.graphics.lineTo(1510.0, 200.0);
      shape.graphics.lineTo(1510.0, 10.0);
      shape.graphics.lineTo(2090.0, 10.0);
      shape.graphics.lineTo(2090.0, 90.0);
      shape.graphics.lineTo(2010.0, 90.0);
      shape.graphics.lineTo(2000.0, 90.0);
      shape.graphics.lineTo(2000.0, 190.0);
      shape.graphics.lineTo(1810.0, 190.0);
      shape.graphics.lineTo(1810.0, 100.0);
      shape.graphics.lineTo(1910.0, 100.0);
      shape.graphics.lineTo(1910.0, 90.0);
      shape.graphics.lineTo(1810.0, 90.0);
      shape.graphics.lineTo(1800.0, 90.0);
      shape.graphics.lineTo(1800.0, 190.0);
      shape.graphics.lineTo(1800.0, 200.0);
      shape.graphics.lineTo(2090.0, 200.0);
      shape.graphics.lineTo(2090.0, 200.0);
      shape.graphics.lineTo(2100.0, 200.0);
      shape.graphics.lineTo(2100.0, 10.0);
      shape.graphics.lineTo(2100.0, 0.0);
      shape.graphics.lineTo(2100.0, 0.0);
      shape.graphics.lineTo(2090.0, 0.0);
      this.collisionLayer.addChild(shape);
      shape = new createjs.Shape();
      shape.graphics.beginFill("#000");
      shape.graphics.moveTo(200.0, 400.0);
      shape.graphics.lineTo(200.0, 490.0);
      shape.graphics.lineTo(110.0, 490.0);
      shape.graphics.lineTo(110.0, 400.0);
      shape.graphics.lineTo(200.0, 400.0);
      this.collisionLayer.addChild(shape);
      shape = new createjs.Shape();
      shape.graphics.beginFill("#000");
      shape.graphics.moveTo(310.0, 200.0);
      shape.graphics.lineTo(400.0, 200.0);
      shape.graphics.lineTo(400.0, 290.0);
      shape.graphics.lineTo(310.0, 290.0);
      shape.graphics.lineTo(310.0, 200.0);
      this.collisionLayer.addChild(shape);
      shape = new createjs.Shape();
      shape.graphics.beginFill("#000");
      shape.graphics.moveTo(2090.0, 190.0);
      shape.graphics.lineTo(2010.0, 190.0);
      shape.graphics.lineTo(2010.0, 100.0);
      shape.graphics.lineTo(2090.0, 100.0);
      shape.graphics.lineTo(2090.0, 190.0);
      this.collisionLayer.addChild(shape);
      return this.addChild(this.collisionLayer);
    };

    LevelGameWindow.prototype.setupDoorLayer = function() {
      this.doorLayer = new createjs.Container();
      this.doorLayer.addChild(new Door(100, 100, this.collisionLayer, Door.COLOR_GREEN, true, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(200, 200, this.collisionLayer, Door.COLOR_RED, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(400, 100, this.collisionLayer, Door.COLOR_GREEN, true, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(500, 100, this.collisionLayer, Door.COLOR_GREEN, true, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(500, 200, this.collisionLayer, Door.COLOR_GREEN, true, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(100, 500, this.collisionLayer, Door.COLOR_RED, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(500, 500, this.collisionLayer, Door.COLOR_GREEN, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(900, 200, this.collisionLayer, Door.COLOR_GREEN, false, Door.ORIENTATION_LANDSCAPE));
      this.doorLayer.addChild(new Door(1000, 500, this.collisionLayer, Door.COLOR_GREEN, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(1300, 500, this.collisionLayer, Door.COLOR_BLUE, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(1500, 200, this.collisionLayer, Door.COLOR_RED, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(1700, 200, this.collisionLayer, Door.COLOR_BLUE, true, Door.ORIENTATION_LANDSCAPE));
      this.doorLayer.addChild(new Door(1800, 200, this.collisionLayer, Door.COLOR_GREEN, true, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(2000, 200, this.collisionLayer, Door.COLOR_BLUE, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(1500, 500, this.collisionLayer, Door.COLOR_RED, true, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(1600, 500, this.collisionLayer, Door.COLOR_BLUE, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(1800, 500, this.collisionLayer, Door.COLOR_GREEN, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(1800, 400, this.collisionLayer, Door.COLOR_RED, false, Door.ORIENTATION_PORTRAIT));
      this.doorLayer.addChild(new Door(1800, 400, this.collisionLayer, Door.COLOR_RED, false, Door.ORIENTATION_LANDSCAPE));
      return this.addChild(this.doorLayer);
    };

    LevelGameWindow.prototype.setupForeground = function() {
      return this.addChild(new createjs.Bitmap(this.assetQueue.getResult("foreground")));
    };

    return LevelGameWindow;

  })(GameWindow);

}).call(this);
