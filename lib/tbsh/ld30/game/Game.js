// Generated by CoffeeScript 1.7.1
(function() {
  var FADESTATE_IN, FADESTATE_OFF, FADESTATE_OUT, game;

  FADESTATE_IN = 0;

  FADESTATE_OFF = 1;

  FADESTATE_OUT = 2;

  game = null;

  window.Game = (function() {
    function Game(width, height, gameWindow) {
      this.width = width;
      this.height = height;
      game = this;
      this.stage = new createjs.Stage("gameCanvas");
      createjs.Ticker.addEventListener("tick", this.onTick);
      this.gwAlpha = 0;
      this.setWindow(gameWindow);
    }

    Game.prototype.setWindow = function(gw) {
      this.nextGameWindow = gw;
      if (this.gameWindow) {
        return this.fadestate = FADESTATE_OUT;
      } else {
        this.gameWindow = this.nextGameWindow;
        this.stage.addChild(this.gameWindow);
        this.nextGameWindow = null;
        this.gameWindow.alpha = this.gwAlpha;
        return this.fadestate = FADESTATE_IN;
      }
    };

    Game.prototype.onTick = function() {
      if (game.gameWindow) {
        switch (game.fadestate) {
          case FADESTATE_IN:
            game.gwAlpha += 1 / 30;
            game.gameWindow.alpha = game.gwAlpha;
            if (game.gwAlpha >= 1) {
              game.gameWindow.alpha = 1;
              game.fadestate = FADESTATE_OFF;
            }
            break;
          case FADESTATE_OUT:
            game.gwAlpha -= 1 / 30;
            game.gameWindow.alpha = game.gwAlpha;
            if (game.gwAlpha <= 0) {
              game.stage.removeChild(game.gameWindow);
              game.gameWindow = game.nextGameWindow;
              game.stage.addChild(game.gameWindow);
              game.nextGameWindow = null;
              game.gameWindow.alpha = 0;
              game.fadestate = FADESTATE_IN;
            }
        }
        game.gameWindow.onTick();
      }
      return game.stage.update();
    };

    return Game;

  })();

}).call(this);
